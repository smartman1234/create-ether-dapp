/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { TodoList, TodoListInterface } from "../TodoList";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_content",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "content",
        type: "string",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "completed",
        type: "bool",
      },
    ],
    name: "TaskCreated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_taskId",
        type: "uint256",
      },
    ],
    name: "completeTask",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_content",
        type: "string",
      },
    ],
    name: "createTask",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_taskId",
        type: "uint256",
      },
    ],
    name: "removeTask",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "taskCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "tasks",
    outputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "content",
        type: "string",
      },
      {
        internalType: "bool",
        name: "completed",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516108ac3803806108ac83398101604081905261002f91610191565b6100388161003e565b50610329565b60408051606081018252600080548083526020808401868152848601849052918352600180825294909220835181559051805193949193610087939285019291909101906100f8565b50604091909101516002909101805460ff19169115159190911790556000805490806100b2836102ea565b91905055507f05d0fb833127fc08168556d0e7ca9554fc3f6bc843b3b7d2bf1c35aea6bab6606000548260006040516100ed9392919061023d565b60405180910390a150565b828054610104906102af565b90600052602060002090601f016020900481019282610126576000855561016c565b82601f1061013f57805160ff191683800117855561016c565b8280016001018555821561016c579182015b8281111561016c578251825591602001919060010190610151565b5061017892915061017c565b5090565b5b80821115610178576000815560010161017d565b6000602082840312156101a357600080fd5b81516001600160401b03808211156101ba57600080fd5b818401915084601f8301126101ce57600080fd5b8151818111156101e0576101e0610313565b604051601f8201601f19908116603f0116810190838211818310171561020857610208610313565b8160405282815287602084870101111561022157600080fd5b61023283602083016020880161027f565b979650505050505050565b838152606060208201526000835180606084015261026281608085016020880161027f565b921515604083015250601f91909101601f19160160800192915050565b60005b8381101561029a578181015183820152602001610282565b838111156102a9576000848401525b50505050565b600181811c908216806102c357607f821691505b602082108114156102e457634e487b7160e01b600052602260045260246000fd5b50919050565b600060001982141561030c57634e487b7160e01b600052601160045260246000fd5b5060010190565b634e487b7160e01b600052604160045260246000fd5b610574806103386000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c8063111002aa1461005c5780638d97767214610071578063b6cb58a51461009c578063c3084117146100b3578063e1e29558146100c6575b600080fd5b61006f61006a366004610376565b6100f5565b005b61008461007f366004610427565b6101af565b60405161009393929190610440565b60405180910390f35b6100a560005481565b604051908152602001610093565b61006f6100c1366004610427565b61025c565b61006f6100d4366004610427565b6000908152600160208190526040909120600201805460ff19169091179055565b6040805160608101825260008054808352602080840186815284860184905291835260018082529490922083518155905180519394919361013e939285019291909101906102a0565b50604091909101516002909101805460ff1916911515919091179055600080549080610169836104f7565b91905055507f05d0fb833127fc08168556d0e7ca9554fc3f6bc843b3b7d2bf1c35aea6bab6606000548260006040516101a493929190610440565b60405180910390a150565b6001602081905260009182526040909120805491810180546101d0906104bc565b80601f01602080910402602001604051908101604052809291908181526020018280546101fc906104bc565b80156102495780601f1061021e57610100808354040283529160200191610249565b820191906000526020600020905b81548152906001019060200180831161022c57829003601f168201915b5050506002909301549192505060ff1683565b60008181526001602081905260408220828155919061027d90830182610324565b50600201805460ff19169055600080549080610298836104a5565b919050555050565b8280546102ac906104bc565b90600052602060002090601f0160209004810192826102ce5760008555610314565b82601f106102e757805160ff1916838001178555610314565b82800160010185558215610314579182015b828111156103145782518255916020019190600101906102f9565b50610320929150610361565b5090565b508054610330906104bc565b6000825580601f10610340575050565b601f01602090049060005260206000209081019061035e9190610361565b50565b5b808211156103205760008155600101610362565b60006020828403121561038857600080fd5b813567ffffffffffffffff808211156103a057600080fd5b818401915084601f8301126103b457600080fd5b8135818111156103c6576103c6610528565b604051601f8201601f19908116603f011681019083821181831017156103ee576103ee610528565b8160405282815287602084870101111561040757600080fd5b826020860160208301376000928101602001929092525095945050505050565b60006020828403121561043957600080fd5b5035919050565b83815260006020606081840152845180606085015260005b8181101561047457868101830151858201608001528201610458565b81811115610486576000608083870101525b5093151560408401525050601f91909101601f19160160800192915050565b6000816104b4576104b4610512565b506000190190565b600181811c908216806104d057607f821691505b602082108114156104f157634e487b7160e01b600052602260045260246000fd5b50919050565b600060001982141561050b5761050b610512565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fdfea2646970667358221220a3f00129d4f34d7ab4d5fcd4b5b2b0ff5f263a7588ec44f81db8ecedeca2f61d64736f6c63430008070033";

type TodoListConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TodoListConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TodoList__factory extends ContractFactory {
  constructor(...args: TodoListConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "TodoList";
  }

  deploy(
    _content: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TodoList> {
    return super.deploy(_content, overrides || {}) as Promise<TodoList>;
  }
  getDeployTransaction(
    _content: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_content, overrides || {});
  }
  attach(address: string): TodoList {
    return super.attach(address) as TodoList;
  }
  connect(signer: Signer): TodoList__factory {
    return super.connect(signer) as TodoList__factory;
  }
  static readonly contractName: "TodoList";
  public readonly contractName: "TodoList";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TodoListInterface {
    return new utils.Interface(_abi) as TodoListInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TodoList {
    return new Contract(address, _abi, signerOrProvider) as TodoList;
  }
}
